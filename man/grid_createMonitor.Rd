% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid_createMonitor.R
\name{grid_createMonitor}
\alias{grid_createMonitor}
\title{Collapse a \emph{bs_grid} object into a \emph{ws_monitor} object with
a single monitor}
\usage{
grid_createMonitor(bs_grid, longitude = NULL, latitude = NULL,
  radius = 20000, count = NULL, monitorID = "generated_id",
  FUN = mean, ...)
}
\arguments{
\item{bs_grid}{\emph{bs_grid} object.}

\item{longitude}{Target longitude passed on to \code{grid_subsetByDistance()}.}

\item{latitude}{Target latitude passed on to \code{grid_subsetByDistance()}.}

\item{radius}{Radius (m) passed on to \code{grid_subsetByDistance()}.}

\item{count}{Radius (m) passed on to \code{grid_subsetByDistance()}.}

\item{monitorID}{Assigned monitorID of the created monitor.
(Default = "generated_id")}

\item{FUN}{The function used to collapse all data at a single time index.
(Default = mean)}

\item{...}{Any additional arguments used by \code{FUN}, \emph{e.g.}
\code{na.rm = TRUE}}
}
\value{
A \emph{ws_monitor} object representing a single monitor.
}
\description{
This function combines the operations of
\code{grid_subsetByDistance()} and \code{PWFSLSmoke::monitor_collapse()}.
Time series associated with multiple grid cells are merged into a single
time series by using \code{FUN} to collapse a given grid cell count, or
or a grid cell radi, to a single coordinate. For instance, if the
\code{FUN = mean} then the grid cells within the paramters are averaged to a
single central coordinate.
Any function acceptable to \code{PWFSLSmoke::monitor_collapse()} can be used.
}
\examples{
\dontrun{
# Next three lines required for bs_grid to ws_monitor conversion
library(MazamaSpatialUtils)
setSpatialDataDir("~/Data/Spatial")
loadSpatialData("NaturalEarthAdm1")

# Now we can work as we normally would
setModelDataDir("~/Data/Bluesky")
bs <- bluesky_load(
  model = "CANSAC-1.33km",
  modelRun = 2019100900,
  subDir = "forecast"
)

# Get the Yosmite monitor
Yosemite_Village <-
  monitor_load(20191009, 20191012) \%>\%
  monitor_subset(monitorIDs = "060431001_01")

# Create a fake version using the 80'th percentile
Yosemite_fake <- grid_createMonitor(
  bs,
  longitude = Yosemite_Village$meta$longitude,
  latitude = Yosemite_Village$meta$latitude,
  radius = 10000,
  monitorID = "Model data",
  FUN = quantile,
  probs = 0.90,
  na.rm = TRUE
)

# Combine them and use AirMonitorPlots to plot them
Yosemite_combined <-
  PWFSLSmoke::monitor_combine(list(Yosemite_Village, Yosemite_fake))

library(AirMonitorPlots)

ggplot_pm25Timeseries(Yosemite_combined) +
  geom_pm25Points(aes(color = monitorID)) +
  stat_nowcast(aes(color = monitorID)) +
  ggtitle("CANSAC-1.33km vs. Monitoring Data")
}
}
