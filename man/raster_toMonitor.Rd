% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/raster_toMonitor.R
\name{raster_toMonitor}
\alias{raster_toMonitor}
\title{Create a PWFSLSmoke ws_monitor object from a Raster\* object}
\usage{
raster_toMonitor(
  raster,
  longitude = NULL,
  latitude = NULL,
  radius = 5,
  count = NULL,
  rasterName = NULL,
  verbose = TRUE
)
}
\arguments{
\item{raster}{A Raster* object.}

\item{longitude}{Target longitude from which the radius will be calculated.}

\item{latitude}{Target latitude from which the radius will be calculated.}

\item{radius}{Distance (km) of radius from target location.}

\item{count}{Number of grid cells within radius to return.}

\item{rasterName}{Optional string prepended to monitorIDs.}

\item{verbose}{Logical to display messages.}
}
\value{
A \pkg{PWFSLSmoke} \emph{ws_monitor} object representing a single
monitor.
}
\description{
Time series associated with multiple grid cells are converted
into a \pkg{PWFSLSmoke} \emph{ws_monitor}. The \code{monitorID} associated
with each location is generated with:

\preformatted{
  MazamaLocationUtils::location_createID(x, y)
}
}
\examples{
\donttest{
library(AirFireModeling)
setModelDataDir('~/Data/BlueSky')

# Load model data
rasterList <- raster_load(
  modelName = c("PNW-1.33km", "PNW-4km"),
  modelRun = c(2020091300),
  xlim = c(-125, -115),
  ylim = c(42, 50)
)

# MazamaSpatialUtils are needed to determine timezone and state
library(MazamaSpatialUtils)
PWFSLSmoke::initializeMazamaSpatialUtils()

model_Portland <- raster_toMonitor(
  rasterList,
  longitude = -122.68,
  latitude = 45.52,
  radius = 5
)

PWFSLSmoke::monitor_timeseriesPlot(
  model_Portland[[1]],
  type = 'l', col = 'salmon'
)
PWFSLSmoke::monitor_timeseriesPlot(
  model_Portland[[2]],
  type = 'l', col = 'dodgerblue', add = TRUE
)

legend(
  x = "topright",
  legend = names(model_Portland),
  lwd = c(1, 1),
  col= c("salmon", "dodgerblue")
)
}

}
